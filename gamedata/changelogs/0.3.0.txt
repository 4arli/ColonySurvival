0.3.0 (2017-**-**)

Changes:

-Added tailor job
--Added tailor shop block
--Added blue carpet block
--Added yellow carpet block
--Added red carpet block
--Added clothing item
--Added linen item
--Added science bag item
-Added technologist job
--Added life science bag item
--Added basic science bag item

-Changed stack size of dirt, grass to 200
-Changed stack size of stone bricks, bricks to 100
-Changed gold cost of buying 100 flax seeds from 200 to 30

Localization changes:

-Added da-DK locale
-Added cs-CZ locale
-Added el-GR locale
-Fixes/additions to de-DE locale
-Fixes/additions to fr-FR locale
-Fixes/additions to ru-RU locale
-Fixes to nl-NL locale

Fixes:

-Fixed the 'missing item' indicator for npc's being incorrect if the missing item is not the first of a recipe.
-Fixed npc's not using specularity/smoothness maps (oops...)
-Fixed npc's not using trilinear/anisotropic filtering (oops...)
-Fixed lit oven sometimes having 2 lit 'front' sides
-Fixed an error that occured when clicking outside of the chatbox when it is opened
-Fixed laborers missing tools for jobs not going to sleep
-Fixed some threading conflicts on the client
-Fixed some callbacks not triggering in some block change situations; for example placing job blocks in water.
-Possibly fixed an issue with file saving
-Fixed an issue where the ChunkQueue thread would slow down slowly with increased load

Modding changes:

-Added [ModCallbackProvidesFor("")] and [ModCallbackDependsOn("")] attributes
--ProvidesFor makes sure this callback is called before the passed callback (assuming same callback type)
--DependsOn makes sure this callback is called after the passed callback (assuming same callback type)
--Naturally does not handle circular dependencies
-Made [ModCallback()] require an identifier string, for use with the ProvidesFor / DependsOn attributes.
-Added OnQuitEarly callback
-Added OnQuit callback
-Added OnQuitLate callback
-Added OnSavedChunkToRegion callback
-Added OnSavedRegionToDisk callback
-Added OnLoadedRegionFromDisk callback
-Added OnLoadedChunkFromRegion callback
-Added OnPlayerMoved callback
-Added AfterDefiningNPCTypes callback
-Added OnTryChangeBlockUser callback
--Allows blocking block placement/removal, essential for anti-griefing mods

-Split OnPlayerConnected into OnPlayerConnectedEarly and OnPlayerConnectedLate
--Use OnPlayerConnectedLate for sending chat messages
-Moved all the non-player crafting recipes to the APIProvider mod.
-Added ItemTypes.RemoveRawType
-Added ItemTypes.GetAllRawTypes

Internal(/Modding) changes:

-Added 2 mods:
--Pipliz/APIProvider
---Contains base classes to deal with defining npc's, recipes
--Pipliz/BlockNPCs
---Implements the existing block/crafting jobs as a mod.
---This took a lot of work.
-Deleted Pipliz/Example mod now that there is a real base mod.
-Added jsonnode.ClearChildren() method.
-Added jsonnode.RemoveChild(int) method.
-Added npcInventory.IsEmpty property.
-Changed npc inventory saving format
-Disabled pretty printing of JSON for anything 2 nodes or deeper. Nearly halved some json save file sizes.
-Removed majority of Pipliz.Extensions.IList<T> methods & their uses.
-Removed /setlimit, /getlimit and /resetlimit commands
-Changed a large amount of methods / callbacks to use Players.Player instead of NetworkID.
-Changed itemTypesServer class to allow registering / changing individual callbacks, and to get/set entire type-callbacks for modifying existing ones.
-Moved mods' Help.txt file to the mods root folder
-Renamed/changed ServerManager.(Try)SetBlock(User) to be more clear in its usage / parameters
-Changed frametime graph to be based on 10 fps = full graph.
-Fixed stats graph on the server not showing the initial AI buildup.
-Changed localization files to include 'missing' keys and a coverage tracker for easier ideas of what needs to be done.
-Fixed an issue with assemblies loading order; now all assemblies are loaded before they're parsed.
-Removed World.SetTypeAtSilently
-Reduced logging from NPC's that can't find a path
-Removed blockTracker.Count
-Added vector3Int.ToRegion, vector3Int.ToRegionLocal
-Improved Threaded collection performance

Regression fixes/changes to 0.3.0 changes after build of 2017-08-05:

2017-08-08:
- Fixed an issue with indirectly removing banners by destroying the block below it
2017-08-09: 
- Doubled cost of linen (1 flax to 2 flax)
- Change APIProvider.Jobs.Register to be split into a Resolve function and the original Register.
-- Use 'ClearType', 'Register' and 'RegisteredTypesEnumerable' inbetween Register and Resolve to change npc types before resolving them.
- Made several base job functions from the APIProvider virtual
- Allow multiple onAdd/onRemove/onChange/OnUpdateAdjacent calls to be registered to the same block
- Half cost of linen again (lol) 2 flax -> 1 flax
- Decreased flax production by 3 per plant to 1

Regression fixes/changes to 0.3.0 build of 2017-08-09 (1):
- Fixed jobs registering 9 times for removal/placing

Regression fixes/changes to 0.3.0 build of 2017-08-09 (2):
- Fixed workbench recipe for tailorshop requiring 'sciencebag' instead of 'linenbag'

Regression fixes/changes to 0.3.0 build of 2017-08-09 (3):
- Fixed chatbox issue, where pressing space while it is active (but not typing) would start typing.
- Fixed tooltip of inventory hanging around after closing

Regression fixes/changes to 0.3.0 build of 2017-09-10 (1):
- Fixed an out of bounds access caused by the threading fix
